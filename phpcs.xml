<?xml version="1.0"?>
<ruleset name="TestSniffs">
    <description>Внутренние правила для PHP_CodeSniffer</description>

    <rule ref="PSR12">
        <exclude name="Generic.Files.LineLength"/>
    </rule>

    <exclude name="PSR1.Classes.ClassDeclaration.MissingNamespace"/>
    <exclude-pattern>bootstrap.php</exclude-pattern>
    <exclude-pattern>Kernel.php</exclude-pattern>

    <config name="installed_paths" value="../../slevomat/coding-standard"/>

    <rule ref="SlevomatCodingStandard.Classes.ClassStructure">
        <properties>
            <property name="groups" type="array">
                <element value="uses"/>

                <element value="enum cases"/>

                <!-- Public constants are first but you don't care about the order of protected or private constants -->
                <element value="public constants"/>
                <element value="constants"/>

                <!-- You don't care about the order among the properties. The same can be done with "properties" shortcut -->
                <element value="public properties"/>
                <element value="protected properties"/>
                <element value="private properties"/>
                <element value="public static properties"/>
                <element value="protected static properties"/>
                <element value="private static properties"/>

                <!-- Constructor is first, then all public methods, then protected/private methods and magic methods are last -->
                <element value="constructor"/>
                <element value="all public methods"/>
                <element value="methods"/>
                <element value="magic methods"/>
            </property>
        </properties>
    </rule>

    <!-- Правило забытых отладочных выводов  -->
    <rule ref="Generic.PHP.ForbiddenFunctions">
        <properties>
            <property name="forbiddenFunctions" type="array" value="eval=>NULL,dd=>NULL,die=>NULL,var_dump=>NULL"/>
        </properties>
    </rule>

    <!-- Правило короткой формы записи массивов (не array(), а []) -->
    <rule ref="Generic.Arrays.DisallowLongArraySyntax.Found">
        <type>warning</type>
    </rule>

    <!-- Правило лишних точек с запятой -->
    <rule ref="SlevomatCodingStandard.PHP.UselessSemicolon"/>

    <!-- Запрет на использование свободных операторов сравнения -->
    <rule ref="SlevomatCodingStandard.Operators.DisallowEqualOperators"/>

    <!-- Правило ищет бесполезные скобки -->
    <rule ref="SlevomatCodingStandard.PHP.UselessParentheses"/>
</ruleset>
